title: Fernando Borretti
description: Personal website
baseurl: ""
url: "http://yourdomain.com"
markdown: kramdown
sass:
    style: :compressed

permalink: /post/:title

# Custom variables

# About page variables

about:
  text: |

      I usually go by **eudoxia** on the Internet, and can usually be found in
      the [##hplusroadmap][hplus] channel on Freenode ([Webchat][hplus-web])
      under that name.

      [hplus]: irc://irc.freenode.net/##hplusroadmap
      [hplus-web]: http://webchat.freenode.net/?channels=##hplusroadmap

  links: |

      Email
      : [eudoxiahp@gmail.com](mailto:eudoxiahp@gmail.com)

      Github
      : [@eudoxia0](https://github.com/eudoxia0)

      Twitter
      : [@eudxa](https://twitter.com/eudxa)

      Bitcoin
      : [1PZTn2FANnaZ4M999MwBWevSxMJpnZYfJ9][btc] ([blockchain.info][btc-web])

      Hacker News
      : [Submissions][hn-subs] and [Comments][hn-comments]

      LinkedIn
      : [fernando-borretti][linkedin]

      [btc]: bitcoin:1PZTn2FANnaZ4M999MwBWevSxMJpnZYfJ9
      [btc-web]: https://blockchain.info/address/1PZTn2FANnaZ4M999MwBWevSxMJpnZYfJ9
      [hn-subs]: https://news.ycombinator.com/submitted?id=eudox
      [hn-comments]: https://news.ycombinator.com/threads?id=eudox
      [linkedin]: https://www.linkedin.com/pub/fernando-borretti/74/b74/827


# Portfolio variables

portfolio:
  intro: |

    [I write small libraries][libs]. If a project implements something that may
    potentially be useful somewhere else, I'll factor it out.

    My long term goal is to make Common Lisp a viable language for web
    development, and most of the code you'll see here reflects this.

    Thankfully, other people have done a lot of good work in this area: [Eitaro
    Fukamachi][fukamachi], [Nicolas Hafner][shinmera], and [Andrew
    Lyon][andrew]. This portfolio wouldn't be what it is without them.

    [libs]: https://gist.github.com/substack/5075355
    [fukamachi]: https://github.com/fukamachi
    [shinmera]: https://github.com/Shinmera
    [andrew]: https://github.com/orthecreedence/

  open_source:
    - name: Crane
      sample: code/portfolio/crane.lisp
      code: lisp
      desc: |

        Crane is an ORM for Common Lisp. It uses CLOS's amazing MetaObject
        Protocol to map Common Lisp objects to SQL records and back, and
        provides a [Django][django]-inspired simple interface and automatic
        migrations.

        Internally, Crane is very similar in structure to
        [SQLAlchemy][sqlalchemy], only most of the components SQLAlchemy
        implements internally are external libraries that Crane depends
        on. Crane is built mostly on top of [fukamachiware][fukamachi]:
        [cl-dbi][dbi] is used to provide a backend-agnostic database
        abstraction, and [SxQL][sxql] is used as the DSL for generating SQL.

        [django]: https://www.djangoproject.com/
        [sqlalchemy]: http://www.sqlalchemy.org/
        [fukamachi]: https://github.com/fukamachi
        [dbi]: https://github.com/fukamachi/cl-dbi
        [sxql]: https://github.com/fukamachi/sxql

      website: http://eudoxia.me/crane/
      github: https://github.com/eudoxia0/crane
      reddit: http://www.reddit.com/r/lisp/comments/27gpmx/crane_an_orm_for_common_lisp/
      hn: https://news.ycombinator.com/item?id=7857418

    - name: cmacro
      sample: code/portfolio/cmacro.c
      code: cpp
      desc: |

        cmacro is like [sweet.js][sjs] for C. It implements a simple,
        pattern-matching based macro language that can be used to extend C.

        cmacro is written in Common Lisp, and is compiled to a native binary, so
        you can drop it right into your Makefile between a file and clang
        without changing anything.

        One of the project's goals is to show how much can be added to a
        language with nothing more than a few simple macros, and in this I've
        [succeeded](https://github.com/eudoxia0/magma).

        [sjs]: http://sweetjs.org/

      github: https://github.com/eudoxia0/cmacro
      reddit: http://www.reddit.com/r/programming/comments/23oaop/lisp_macros_for_c/
      hn: https://news.ycombinator.com/item?id=7627135

    - name: Magma
      sample: code/portfolio/magma.c
      code: cpp
      desc: |

        cmacro just provides the macro system -- Magma is a library of
        macros built on cmacro, extending C to provide:

        - [Anonymous functions][anon]
        - [Lazy evaluation][lazy]
        - [Algebraic data types][adt]
        - [Anaphoric macros][anaphora]
        - [Resource-managing macros][res] (Automatically freeing pointers, etc.)

        [anon]: https://github.com/eudoxia0/magma#anonymous-functions
        [lazy]: https://github.com/eudoxia0/magma#lazy-evaluation
        [adt]: https://github.com/eudoxia0/magma#algebraic-data-types
        [anaphora]: https://github.com/eudoxia0/magma#anaphoric-macros
        [res]: https://github.com/eudoxia0/magma#with_allocation

      github: https://github.com/eudoxia0/magma

    - name: Corona
      sample: code/portfolio/corona.lisp
      code: lisp
      desc: |

        Corona is basically a [Vagrant][vagrant] clone. You define virtual
        machines (Their name, a base system to build from, amount of RAM, IP
        address, etc.) and Corona sets it up. It uses VirtualBox to run the
        machines and [Vagrant Cloud][vcloud] as a source of base images to build
        machines from.

        The advantage it has over Vagrant is simply that it's pure Lisp, so it
        can be used as a dependency in a Common Lisp system, without the user
        having to set up the Ruby ecosystem to install Vagrant. It's also pretty
        nice to use.

        [vagrant]: https://www.vagrantup.com/
        [vcloud]: https://vagrantcloud.com/

      website: http://eudoxia.me/corona/
      github: https://github.com/eudoxia0/corona
      reddit: http://www.reddit.com/r/lisp/comments/2k11io/corona_build_and_manage_virtual_machines_from/

    - name: Rock
      sample: code/portfolio/rock.lisp
      code: lisp
      desc: |

        Rock is an asset manager for Common Lisp, basically a combination of
        [Bower][bower] plus an asset pipeline. It automatically downloads web
        development libraries (JavaScript libraries like jQuery, JS/CSS
        libraries like Bootstrap, etc.), manages their versions, and allows you
        to merge their files together so you only serve a single CSS file and a
        single JS one.

        [bower]: http://bower.io/

      website: http://eudoxia.me/rock/
      github: https://github.com/eudoxia0/rock

  others:
    - - name: cl-virtualbox
        desc: A few functions that map to `vboxmanage` commands.

      - name: trivial-ssh
        desc: >
          A simple abstraction layer over `cl-libssh2`, a binding to the
          [libssh2](http://www.libssh2.org/) library.

      - name: trivial-extract
        desc: For extracting `.tar`, `.tar.gz` and `.zip` files simply.

      - name: trivial-download
        desc: It downloads files.

      - name: cl-base58
        desc: An implementation of Bitcoin's base58 encoding and decoding.

    - - name: eco
        desc: >
          A fast and designer-friendly template engine, inspired by the syntax
          of eRuby.

      - name: cl-pass
        desc: Password hashing and verification with reasonable, secure defaults.

      - name: hermetic
        desc: >
          An authentication library for [Clack](http://clacklisp.org/) web
          applications.

      - name: clack-errors
        desc: >
          A clone of
          [better_errors](https://github.com/charliesome/better_errors) for
          Clack.

      - name: asdf-linguist
        desc: >
          A collection of extensions to ASDF, the de-facto build system for
          Common Lisp.

links:
  - service: github
    url: https://github.com/eudoxia0
  - service: twitter
    url: https://twitter.com/eudxa
  - service: linkedin
    url: https://www.linkedin.com/pub/fernando-borretti/74/b74/827
